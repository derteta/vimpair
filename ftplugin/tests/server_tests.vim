python from mock import Mock
execute("source " . expand("<sfile>:p:h") . "/test_tools.vim")
execute("source " . expand("<sfile>:p:h") . "/../vimpair.vim")


function! _VPServerTest_set_up()
  execute("vnew")
  call VimpairServerStart()
  python fake_connection = Mock()
  python connections.append(fake_connection)
endfunction

function! _VPServerTest_tear_down()
  call VimpairServerStop()
  execute("q!")
endfunction

function! _VPServerTest_assert_has_sent_message(expected)
  let g:_VPServerTest_expected = a:expected
  python fake_connection.send_message.assert_any_call(
    \ vim.vars['_VPServerTest_expected'])
endfunction


function! VPServerTest_sends_buffer_contents_on_connection()
  execute("normal iThis is just some text")

  call _VPServerTest_assert_has_sent_message(
    \ "VIMPAIR_FULL_UPDATE|22|This is just some text")
endfunction

function! VPServerTest_sends_cursor_position_on_connection()
  execute("normal iThis is line one")
  execute("normal oThis is line two")

  execute("normal gg0ww")
  " The CursorMoved autocommand is not reported in this scope,
  " so we need to manually trigger it
  execute("doautocmd CursorMoved")

  call _VPServerTest_assert_has_sent_message("VIMPAIR_CURSOR_POSITION|0|8")
endfunction

function! VPServerTest_sends_long_buffer_contents_in_chunks()
  execute("normal a0123456789")
  execute("normal 201.")

  call _VPServerTest_assert_has_sent_message(
    \ "VIMPAIR_CONTENTS_START|997|01234567890123456789012345678901234567890123"
    \ . "456789012345678901234567890123456789012345678901234567890123456789012"
    \ . "345678901234567890123456789012345678901234567890123456789012345678901"
    \ . "234567890123456789012345678901234567890123456789012345678901234567890"
    \ . "123456789012345678901234567890123456789012345678901234567890123456789"
    \ . "012345678901234567890123456789012345678901234567890123456789012345678"
    \ . "901234567890123456789012345678901234567890123456789012345678901234567"
    \ . "890123456789012345678901234567890123456789012345678901234567890123456"
    \ . "789012345678901234567890123456789012345678901234567890123456789012345"
    \ . "678901234567890123456789012345678901234567890123456789012345678901234"
    \ . "567890123456789012345678901234567890123456789012345678901234567890123"
    \ . "456789012345678901234567890123456789012345678901234567890123456789012"
    \ . "345678901234567890123456789012345678901234567890123456789012345678901"
    \ . "234567890123456789012345678901234567890123456789012345678901234567890"
    \ . "12345678901234567890123456789012345678901234567890123456")
  call _VPServerTest_assert_has_sent_message(
    \ "VIMPAIR_CONTENTS_PART|998|789012345678901234567890123456789012345678901"
    \ . "234567890123456789012345678901234567890123456789012345678901234567890"
    \ . "123456789012345678901234567890123456789012345678901234567890123456789"
    \ . "012345678901234567890123456789012345678901234567890123456789012345678"
    \ . "901234567890123456789012345678901234567890123456789012345678901234567"
    \ . "890123456789012345678901234567890123456789012345678901234567890123456"
    \ . "789012345678901234567890123456789012345678901234567890123456789012345"
    \ . "678901234567890123456789012345678901234567890123456789012345678901234"
    \ . "567890123456789012345678901234567890123456789012345678901234567890123"
    \ . "456789012345678901234567890123456789012345678901234567890123456789012"
    \ . "345678901234567890123456789012345678901234567890123456789012345678901"
    \ . "234567890123456789012345678901234567890123456789012345678901234567890"
    \ . "123456789012345678901234567890123456789012345678901234567890123456789"
    \ . "012345678901234567890123456789012345678901234567890123456789012345678"
    \ . "90123456789012345678901234567890123456789012345678901234")
  call _VPServerTest_assert_has_sent_message(
    \ "VIMPAIR_CONTENTS_END|25|5678901234567890123456789")
endfunction


call VPTestTools_run_tests("VPServerTest")
